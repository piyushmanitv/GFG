Gas Station
Difficulty: MediumAccuracy: 34.79%Submissions: 208K+Points: 4Average Time: 20m
There are n gas stations along a circular tour. You are given two integer arrays gas[] and cost[], 
where gas[i] is the amount of gas available at station i and cost[i] is the gas needed to travel 
from station i to station (i+1). You have a car with an unlimited gas tank and start with an empty 
tank at some station. Your task is to return the index of the starting station if it is possible to 
travel once around the circular route in a clockwise direction without running out of gas at any station; otherwise, return -1.

Note: If a solution exists, it is guaranteed to be unique.








class Solution {
  public:
    int startStation(vector<int> &gas, vector<int> &cost) {
        // Your code here
        int cur = 0;
        int pre = 0;
        
        int ans = 0;
        
        int n=gas.size();
        for(int i=0;i<n;i++){
            cur+=(gas[i]-cost[i]);
            if(cur<0){
                pre+=cur;
                cur=0;
                ans = i+1;
            }
        }
        return (cur+pre)>=0?ans:-1;
    }
};
