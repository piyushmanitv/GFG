Largest number in K swaps
Difficulty: MediumAccuracy: 18.84%Submissions: 105K+Points: 4Average Time: 30m
Given a number k and string s of digits denoting a positive integer, build the largest number possible by performing swap operations on the digits of s at most k times
















class Solution {
  public:
    // Function to find the largest number after k swaps.
    string maxNum = "";

    void helper(string &str, int k, int idx) {
        if (k == 0) return;
        char maxDigit = str[idx];
        for (int i = idx + 1; i < str.size(); i++) {
            if (str[i] > maxDigit) maxDigit = str[i];
        }

        if (maxDigit != str[idx]) k--;

        for (int i = str.size() - 1; i >= idx; i--) {
            if (str[i] == maxDigit) {
                swap(str[i], str[idx]);
                if (str > maxNum) maxNum = str;
                helper(str, k, idx + 1);
                swap(str[i], str[idx]);
            }
        }
    }

    string findMaximumNum(string s, int k) {
        maxNum = s;
        helper(s, k, 0);
        return maxNum;
        // code here.
    }
};
