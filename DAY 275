Unique K-Number Sum
Difficulty: MediumAccuracy: 84.5%Submissions: 2K+Points: 4
Given two integers n and k, the task is to find all valid combinations of k numbers that adds up to n based on the following conditions:

Only numbers from the range [1, 9] used.
Each number can only be used at most once.
Note: You can return the combinations in any order, the driver code will print them in sorted order.










class Solution {
  public:
    void solve(int n,int k,vector<int>&curr,vector<vector<int>>&ans,int i){
        if(n==0){
            if(curr.size()==k){
                ans.push_back(curr);
            }
            return ;
        }
        if(n<0  || i>9){
            return;
        }
        solve(n,k,curr,ans,i+1);
        curr.push_back(i);
        solve(n-i,k,curr,ans,i+1);
        curr.pop_back();
    }
    vector<vector<int>> combinationSum(int n, int k) {
        vector<vector<int>>ans;
        vector<int>curr;
        solve(n,k,curr,ans,1);
        return ans;
    }
};
