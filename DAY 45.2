BFS of graph




Given a undirected graph represented by an adjacency list adj, which is 
a vector of vectors where each adj[i] represents the list of vertices 
connected to vertex i. Perform a Breadth First Traversal (BFS) starting 
from vertex 0, visiting vertices from left to right according to the 
adjacency list, and return a list containing the BFS traversal of the graph.

Note: Do traverse in the same order as they are in the adjacency list.



class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(vector<vector<int>> &adj) {
        // Code here
        int n = adj.size();
        vector<int> vis(n, 0);
        vector<int> ans;
        queue<int> q;
    
        q.push(0);
        vis[0] = 1;
    
        while (!q.empty()) {
            int node = q.front();
            q.pop();
            ans.push_back(node);
    
            for (int neighbor : adj[node]) {  
                if (!vis[neighbor]) {
                    q.push(neighbor);
                    vis[neighbor] = 1;
                }
            }
        }
        return ans;
    }
};
