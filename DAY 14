Equilibrium Point




Given an array of integers arr[], the task is to find the first equilibrium point in the array.

The equilibrium point in an array is an index (0-based indexing) such that the sum of all elements before that index is the same as the sum of elements after it. Return -1 if no such point exists. 









int findEquilibrium(vector<int> &arr) {
        int n = arr.size();
        if (n == 0) return -1; 
    
        vector<int> pref(n);
        pref[0] = arr[0];
        for (int i = 1; i < n; i++) {
            pref[i] = arr[i] + pref[i-1];
        }
    
        vector<int> suff(n);
        suff[n-1] = arr[n-1];
        for (int i = n-2; i >= 0; i--) {
            suff[i] = arr[i] + suff[i+1];
        }
    
        for (int i = 0; i < n; i++) {  
            if (pref[i] == suff[i]) {
                return i;
            }
        }
        
        return -1;
    }
