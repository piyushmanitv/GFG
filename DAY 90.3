String Permutations




Given a string S. The task is to find all permutations (need not be different) of a given string.

Note: return the permutations in lexicographically increasing order.














class Solution{
    public:
    //Complete this function
    
    vector<string> permutation(string S)
    {
        //Your code here
        vector<string>result;
        per(S,0,result);
        sort(result.begin(),result.end());
        return result;
    }
    void  per(string S,int i,vector<string>&result){
        if(i==S.length()){
            result.push_back(S);
            return;
        }
        for(int j=i;j<S.length();j++){
            swap(S[i],S[j]);
            per(S,i+1,result);
            swap(S[i],S[j]);
        }
    }
};
