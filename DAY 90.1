Binary Tree to DLL




Given a Binary Tree (BT), convert it to a Doubly Linked List (DLL) in place. The left and right
pointers in nodes will be used as previous and next pointers respectively in converted DLL. The 
order of nodes in DLL must be the same as the order of the given Binary Tree. The first node of 
Inorder traversal (leftmost node in BT) must be the head node of the DLL.

Note: h is the tree's height, and this space is used implicitly for the recursion stack.

TreeToList















/* Structure for tree and linked list

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
};
 */

// This function should return head to the DLL
class Solution {
  public:
    void solve(Node* root,Node*&head,Node* &prev){

        if(root==NULL) return;
        
      
        solve(root->left,head,prev);
        
        if(head==NULL) head = root;
        if(prev!= NULL){
           root->left = prev;
           prev->right = root;
        }
        prev = root;
        
        solve(root->right,head,prev);
        
    }
    
    
    Node* bToDLL(Node* root) {
        Node* head = NULL;
        Node *prev = NULL;
        solve(root,head,prev);
        return head;
    }
};
