Add 1 to a Linked List Number





You are given a linked list where each element in the list is a node and 
have an integer data. You need to add 1 to the number formed by 
concatinating all the list node numbers together and return the 
head of the modified linked list. 

Note: The head represents the first element of the given array.





// User function template for C++

/*

struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }
};

*/

class Solution {
  public:
    Node* reverse(Node* head){
        Node*prev = NULL;
        Node*curr = head;
        while(curr != NULL){
            Node* next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    Node* addOne(Node* head) {
         head = reverse(head);
         Node* curr = head;
         Node* prev =NULL;
         int carry = 1;
         while(curr != NULL){
             int data = curr->data + carry;
             carry = data/10;
             curr->data = data%10;
             if(carry == 0) break;
             prev = curr;
             curr = curr->next;
         }
         if(carry == 1) prev->next = new Node(1);
         head = reverse(head);
         return head;
    }
};

