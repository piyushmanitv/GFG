Predecessor and Successor
Difficulty: MediumAccuracy: 47.36%Submissions: 137K+Points: 4
You are given root node of the BST and an integer key. You need to find the in-order successor and predecessor of the given key. If either predecessor or successor is not found, then set it to NULL.

Note:- In an inorder traversal the number just smaller than the target is the predecessor and the number just greater than the target is the successor. 










class Solution {
public:
    vector<Node*> findPreSuc(Node* root, int key) {
        Node* pre = nullptr;
        Node* suc = nullptr;

        Node* curr = root;
        while (curr) {
            if (curr->data == key) {
                break;
            }
            else if (curr->data < key) {
                pre = curr;
                curr = curr->right;
            } else {
                suc = curr;
                curr = curr->left;
            }
        }

        if (curr) {
            Node* temp = curr->left;
            while (temp) {
                pre = temp;
                temp = temp->right;
            }

            temp = curr->right;
            while (temp) {
                suc = temp;
                temp = temp->left;
            }
        }

        return {pre, suc};
    }
};
