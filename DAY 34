Parenthesis Checker




Given a string s, composed of different combinations of '(' , ')', '{', '}', '[', ']', verify the validity of the arrangement.
An input string is valid if:

         1. Open brackets must be closed by the same type of brackets.
         2. Open brackets must be closed in the correct order.






class Solution {
  public:
    bool isParenthesisBalanced(string& s) {
        // code here
        stack<char>st;
        
        for(int i = 0 ; i < s.length() ; i++){
            if(s[i] == '(' || s[i] == '{' || s[i] == '[') st.push(s[i]);
            
            else{
                if(st.size() == 0) return false;
                char ch = st.top();
                st.pop();
                if((s[i] == ')' && ch == '(') ||  (s[i] == ']' && ch == '[') || (s[i] == '}' && ch == '{')) continue;
                else return false;
            }
        }
        
        return st.empty();
    }
};
