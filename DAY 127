Root to Leaf Paths
Difficulty: MediumAccuracy: 43.65%Submissions: 139K+Points: 4Average Time: 30m
Given a Binary Tree, you need to find all the possible paths from the root node to all the leaf nodes of the binary tree.

Note: The paths should be returned such that paths from the left subtree of any node are listed first, followed by paths from the right subtree













/*

Definition for Binary Tree Node
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
};
*/

class Solution {
  public:
    vector<vector<int>> Paths(Node* root) {
        // code here
        vector<vector<int>> ans;
        vector<int> path;
        
        auto dfs = [&](auto&& dfs, Node* root) -> void {
            if(root == NULL) return;
            if(root -> right == NULL && root -> left == NULL) {
                ans.push_back(path);
                ans.back().push_back(root -> data);
                return;
            }  
            
            path.push_back(root -> data);
            dfs(dfs, root -> left);
            dfs(dfs, root -> right);
            path.pop_back();
        };
        dfs(dfs, root);
        
        return ans;
    }
};
