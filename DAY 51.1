Maximum Product Subarray


Given an array arr[] that contains positive and negative integers 
(may contain 0 as well). Find the maximum product that we can get 
in a subarray of arr[].

Note: It is guaranteed that the output fits in a 32-bit integer.




class Solution {
  public:
    // Function to find maximum product subarray
    int maxProduct(vector<int> &arr) {
        // Your Code Here
        int lowest = arr[0], highest = arr[0], prevHighest = highest, ans = arr[0];
        for (int i=1;i<arr.size();i++) {
            highest = max({arr[i], highest*arr[i], lowest*arr[i]});
            lowest = min({arr[i], lowest*arr[i], prevHighest*arr[i]});
            prevHighest = highest;
            ans = max({ans, highest});
        }
        return ans;
    }
};
