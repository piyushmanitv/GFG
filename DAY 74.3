Smallest distinct window



Given a string s, your task is to find the smallest window 
length that contains all the characters of the given string
at least one time.







class Solution {
  public:
    int findSubString(string& s) {
        // Your code goes here
        int n=s.size();
        set<char> st;
        map<char,int> mp;
        for(auto x:s) st.insert(x);
        int res=INT_MAX,start=0;
    
        for(int i=0;i<n;i++){
            mp[s[i]]++;
            if(mp.size()==st.size()){
                while(mp.size()==st.size()){
                    mp[s[start]]--;
                    if(mp[s[start]]==0) mp.erase(s[start]);
                    start++;
                }
                res=min(res,i-start+2);
                
            }
        }
        return res;
    }
};
