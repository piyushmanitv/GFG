Max Circular Subarray Sum




Given an array of integers arr[] in a circular fashion. 
Find the maximum subarray sum that we can get if we assume 
the array to be circular.





class Solution {
  public:
    // arr: input array
    // Function to find maximum circular subarray sum.
    int circularSubarraySum(vector<int> &arr) {

        // your code here
        int n = arr.size();
        int sum = accumulate(arr.begin(),arr.end(),0);
        int ans = INT_MIN;
        int currentsum = 0;

        
        for(int i = 0; i<n; i++)
        {
            currentsum += arr[i];
            ans = max(ans, currentsum);
            if(currentsum<0) currentsum = 0;
        }
        int frontmax = arr[0];
        int frontsum = arr[0];
        for(int i = 1; i<n; i++)
        {
            sum -= arr[i-1];
            if(frontmax>0)
            {
                int maxi = sum + frontmax;
                ans = max(ans,maxi);
                
            }
            frontsum += arr[i];
            frontmax = max(frontmax,frontsum);
            
        }
        return ans;
    }
};
