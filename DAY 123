Prime List
Difficulty: MediumAccuracy: 53.68%Submissions: 27K+Points: 4
You are given the head of a linked list. You have to replace all the values of the nodes with the nearest prime number.
If more than one prime number exists at an equal distance, choose the smallest one. Return the head of the modified linked list.










// User function Template for C++

/*
class Node{
public:
    int val;
    Node *next;
    Node(int num){
        val=num;
        next=NULL;
    }
};
*/

class Solution {
  public:
    bool isPrime(int n){
        if(n==1 or n<=0) return false;
        for(int i=2; i<=sqrt(n); i++){
            if(n%i==0){
                return false;
            }
        }
        return true;
    }

    Node *primeList(Node *head){
        Node* root=head;
        while(head!=NULL){
            int temp = head->val;
            
            if(isPrime(temp)){
                head = head->next;
                continue;
            }
            else{
                int temp2 = temp;
                while(!isPrime(temp) and !isPrime(temp2)){
                    temp++;
                    temp2--;
                }
                
                if(isPrime(temp) and isPrime(temp2)){
                    head->val = min(temp,temp2);
                }
                else if(isPrime(temp2)){
                    head->val = temp2;
                }
                else{
                    head->val = temp;
                }
                
                head = head->next;
            }
        }
        return root;
    }
};
