Power Of Numbers




Given a number n, find the value of n raised to the power of its own reverse.

Note: The result will always fit into a 32-bit signed integer.









class Solution {
  public:
    int reverseExponentiation(int n) {
        // code here
    int reversed = 0;
        int temp=n;
        while (temp != 0) {
        int digit = temp % 10;      
        reversed = reversed * 10 + digit; 
        temp /= 10;   
       // int value_reverse=reversed;
    }
        const int MOD = 1e9 + 7;   // for prevent Overflow this "1e9+7" number dealing with 
                                //large number
        long long result = 1;
        for (int i = 0; i < reversed; i++) {
            result = (result * n) % MOD;
        }
        return result;
    }
};
