Strictly Increasing Array
Difficulty: HardAccuracy: 36.05%Submissions: 45K+Points: 8
Given an array nums of n positive integers. Find the minimum number of operations required to modify the array such that array elements are in strictly increasing order (nums[i] < nums[i+1]).
Changing a number to greater or lesser than an original number is counted as one operation.

Note: Array elements can become negative after applying the operation.









class Solution {
  public:

    int min_operations(vector<int>& nums) {
        // Code here
         int n = nums.size();
    vector<int> dp(n,1);
    int LIS=1;
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<i;j++)
        {
            if(nums[i]>nums[j] && (nums[i]-nums[j])>=(i-j))
            {
                dp[i] = max(1+dp[j],dp[i]);
                LIS = max(LIS,dp[i]);
            }
        }
    }
    return (n-LIS);
    }
};
