K Closest Points to Origin



Given an array of points where each point is represented as 
points[i] = [xi, yi] on the X-Y plane and an integer k, return
the k closest points to the origin (0, 0).

The distance between two points on the X-Y plane is the 
Euclidean distance, defined as: 

sqrt( (x2 - x1)2 + (y2 - y1)2 )

Note: You can return the k closest points in any order, 
driver code will sort them before printing










class Solution {
  public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        // Your code here
        priority_queue<pair<int,pair<int,int>>>pq;
        int n=points.size();
        
        for(int i=0;i<n;i++){
            int x=points[i][0],y=points[i][1];
            int sqred=(x*x) + (y*y);
            int dist=sqrt((sqred));
            pq.push({dist,{x,y}});
            while(pq.size()>k){
                pq.pop();
            }
        }
        
        vector<vector<int>>ans;
        while(!pq.empty()){
            ans.push_back({pq.top().second.first,pq.top().second.second});
            pq.pop();
        }
        
        return ans;
    }
};
