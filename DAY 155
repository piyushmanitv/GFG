LCS of three strings



Given three strings s1, s2, and s3 containing uppercase letters, lowercase letters, 
and digits, find the length of longest common sub-sequence in all three given strings.











class Solution {
  public:
    int dp[101][101][101];
    int solve(string& s1, string& s2, string& s3,int i,int j,int k){
        if(i>=s1.size() || j>=s2.size() || k>=s3.size()){
            return 0;
        }
        if(dp[i][j][k]!=-1) return dp[i][j][k];
        int nottake=max({solve(s1,s2,s3,i+1,j,k),solve(s1,s2,s3,i,j+1,k),solve(s1,s2,s3,i,j,k+1)});
        int take=0;
        if(s1[i]==s2[j] && s2[j]==s3[k]){
            take=1+solve(s1,s2,s3,i+1,j+1,k+1);
        }
        return dp[i][j][k]=max(take,nottake);
        
    }
    int lcsOf3(string& s1, string& s2, string& s3) {
        // Code here
        memset(dp,-1,sizeof(dp));
        return solve(s1,s2,s3,0,0,0);
    }
};
