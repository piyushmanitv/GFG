Edit Distance




Given two strings s1 and s2. Return the minimum number of operations required to convert s1 to s2.
The possible operations are permitted:

Insert a character at any position of the string.
Remove any character from the string.
Replace any character from the string with any other character.







class Solution {
  public:
    // Function to compute the edit distance between two strings
    int editDistance(string& s1, string& s2) {
        // code here
        int n=s1.length();
        int m=s2.length();
        int t[n+1][m+1];
        //Initialization
        for(int i=0;i<n+1;i++)t[i][0]=i;//if s2 empty delete all elements of s1
        for(int j=0;j<m+1;j++)t[0][j]=j;//if s1 empty insert all selements of s2
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
                if(s1[i-1]==s2[j-1])t[i][j]=t[i-1][j-1];
                else{
                    t[i][j]=1+min({t[i-1][j],//Delete
                        t[i][j-1],          //Insert 
                        t[i-1][j-1]         //Replace
                    });
                }
            }
        }
        return t[n][m];
    }
};
